snippet <?
<?php

${0}
endsnippet


snippet use
use ${1:Foo\Bar\Baz};
${0}

endsnippet


snippet m
${1:protected} function ${2:foo}()
{
	${0}
}
endsnippet


snippet met
public function ${2:foo}()
{
	${0}
}
endsnippet


snippet pmet
protected function ${2:foo}()
{
	${0}
}
endsnippet

snippet rg
Route::get('${1}', '${2}');
endsnippet

snippet rga
Route::get('${1}', function () {
	${0}
});
endsnippet

snippet rp
	Route::post('${1}', '${2}');
endsnippet

snippet rpa
	Route::post('${1}', function () {
		${0}
	});
endsnippet

snippet factory
$factory->define($1::class, function (Faker\Generator $faker) {
	return [
		$0
	];
});
endsnippet


snippet _c
public function __construct()
{
	${0}
}
endsnippet

snippet if
if (${1:/* condition */}) {
	${0}
}
endsnippet

snippet switch
switch ($${1:variable}) {
case '${2:value}':
	${3}
	break;
	${0}
default:
	${4}
	break;
}
endsnippet


snippet case
case '${1:value}':
${2}
break;
endsnippet


snippet for
for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
	${0}
}
endsnippet


snippet foreach
foreach ($${1:variable} as $${2:value}) {
	${0}
}
endsnippet


snippet try
try {
	${0}
} catch (${1:Exception} $e) {
}
endsnippet


snippet dd
dd(${1});
endsnippet

snippet vd
var_dump(${1});
endsnippet

snippet $
$this->
endsnippet


snippet foreign
$table->integer('$1_id')->unsigned()->nullable();
$table->foreign('$1_id')->references('id')->on('$1s')${2:->onUpdate('cascade')}${3:->onDelete('cascade')};
endsnippet


# Start Docblock
snippet /*
/**
* ${0}
*/
endsnippet

